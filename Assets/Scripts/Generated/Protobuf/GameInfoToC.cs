// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameInfoToC.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from GameInfoToC.proto</summary>
public static partial class GameInfoToCReflection {

  #region Descriptor
  /// <summary>File descriptor for GameInfoToC.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static GameInfoToCReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFHYW1lSW5mb1RvQy5wcm90bxoOR2FtZUluZm8ucHJvdG8aEUVudGl0eVN0",
          "YXRlLnByb3RvInUKC0dhbWVJbmZvVG9DEhAKCGVudGl0eUlkGAEgASgJEhEK",
          "CXNlc3Npb25JZBgCIAEoCRIcCglnYW1lX2luZm8YAyABKAsyCS5HYW1lSW5m",
          "bxIjCg1lbnRpdHlfc3RhdGVzGAQgAygLMgwuRW50aXR5U3RhdGViBnByb3Rv",
          "Mw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::GameInfoReflection.Descriptor, global::EntityStateReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GameInfoToC), global::GameInfoToC.Parser, new[]{ "EntityId", "SessionId", "GameInfo", "EntityStates" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// @auto_generate
/// </summary>
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class GameInfoToC : pb::IMessage<GameInfoToC>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GameInfoToC> _parser = new pb::MessageParser<GameInfoToC>(() => new GameInfoToC());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<GameInfoToC> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::GameInfoToCReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameInfoToC() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameInfoToC(GameInfoToC other) : this() {
    entityId_ = other.entityId_;
    sessionId_ = other.sessionId_;
    gameInfo_ = other.gameInfo_ != null ? other.gameInfo_.Clone() : null;
    entityStates_ = other.entityStates_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public GameInfoToC Clone() {
    return new GameInfoToC(this);
  }

  /// <summary>Field number for the "entityId" field.</summary>
  public const int EntityIdFieldNumber = 1;
  private string entityId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string EntityId {
    get { return entityId_; }
    set {
      entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "sessionId" field.</summary>
  public const int SessionIdFieldNumber = 2;
  private string sessionId_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SessionId {
    get { return sessionId_; }
    set {
      sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "game_info" field.</summary>
  public const int GameInfoFieldNumber = 3;
  private global::GameInfo gameInfo_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::GameInfo GameInfo {
    get { return gameInfo_; }
    set {
      gameInfo_ = value;
    }
  }

  /// <summary>Field number for the "entity_states" field.</summary>
  public const int EntityStatesFieldNumber = 4;
  private static readonly pb::FieldCodec<global::EntityState> _repeated_entityStates_codec
      = pb::FieldCodec.ForMessage(34, global::EntityState.Parser);
  private readonly pbc::RepeatedField<global::EntityState> entityStates_ = new pbc::RepeatedField<global::EntityState>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<global::EntityState> EntityStates {
    get { return entityStates_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as GameInfoToC);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(GameInfoToC other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (EntityId != other.EntityId) return false;
    if (SessionId != other.SessionId) return false;
    if (!object.Equals(GameInfo, other.GameInfo)) return false;
    if(!entityStates_.Equals(other.entityStates_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
    if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
    if (gameInfo_ != null) hash ^= GameInfo.GetHashCode();
    hash ^= entityStates_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (EntityId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(EntityId);
    }
    if (SessionId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SessionId);
    }
    if (gameInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GameInfo);
    }
    entityStates_.WriteTo(output, _repeated_entityStates_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (EntityId.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(EntityId);
    }
    if (SessionId.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(SessionId);
    }
    if (gameInfo_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(GameInfo);
    }
    entityStates_.WriteTo(ref output, _repeated_entityStates_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (EntityId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
    }
    if (SessionId.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
    }
    if (gameInfo_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameInfo);
    }
    size += entityStates_.CalculateSize(_repeated_entityStates_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(GameInfoToC other) {
    if (other == null) {
      return;
    }
    if (other.EntityId.Length != 0) {
      EntityId = other.EntityId;
    }
    if (other.SessionId.Length != 0) {
      SessionId = other.SessionId;
    }
    if (other.gameInfo_ != null) {
      if (gameInfo_ == null) {
        GameInfo = new global::GameInfo();
      }
      GameInfo.MergeFrom(other.GameInfo);
    }
    entityStates_.Add(other.entityStates_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          EntityId = input.ReadString();
          break;
        }
        case 18: {
          SessionId = input.ReadString();
          break;
        }
        case 26: {
          if (gameInfo_ == null) {
            GameInfo = new global::GameInfo();
          }
          input.ReadMessage(GameInfo);
          break;
        }
        case 34: {
          entityStates_.AddEntriesFrom(input, _repeated_entityStates_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          EntityId = input.ReadString();
          break;
        }
        case 18: {
          SessionId = input.ReadString();
          break;
        }
        case 26: {
          if (gameInfo_ == null) {
            GameInfo = new global::GameInfo();
          }
          input.ReadMessage(GameInfo);
          break;
        }
        case 34: {
          entityStates_.AddEntriesFrom(ref input, _repeated_entityStates_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
